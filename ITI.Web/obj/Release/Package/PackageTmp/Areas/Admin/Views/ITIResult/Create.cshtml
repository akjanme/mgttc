@model ITI.Models.ITIResultModel
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 box box-info">
        <div class="col-md-6">
            <!-- Horizontal Form -->
            <div class="box-header with-border">
                <h3 class="box-title">Result</h3>
            </div>
            <!-- /.box-header -->
            <!-- form start -->
            @using (Html.BeginForm("Create", "ITIResult", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.ValidationSummary(true, "", new { @class = "text-danger" }) 
                <div class="box-body">
                <div class="form-group">
                    @*@Html.LabelFor(x=>x.Name, "Student Name",new { @class= "col-sm-2 control-label" })*@
                    <label for="Trade" class="col-sm-4 control-label">Trade</label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(m => m.Trade, new SelectList(ViewBag.Trade, "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="Name" class="col-sm-4 control-label">Session</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(x => x.Session, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Session, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="Name" class="col-sm-4 control-label">Total Student</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(x => x.TotalStudent, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.TotalStudent, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="Name" class="col-sm-4 control-label">Total Student Appeared In Exam</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(x => x.TotalAppeared, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.TotalAppeared, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="Name" class="col-sm-4 control-label">Total Passout Student</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(x => x.Passout, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Passout, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="Name" class="col-sm-4 control-label">Total Certificated</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(x => x.CertificateIssued, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.CertificateIssued, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!-- /.box-body -->
                <div class="box-footer">
                    @Html.HiddenFor(x => x.ID)
                    <a href="/admin/ITIResult/index" class="btn btn-default">Back To List</a>
                    <button type="submit" class="btn btn-info pull-right">Save Result</button>
                </div>
                <!-- /.box-footer --> 
            
            </div>
        <!-- /.box -->
            }
        <div class="col-md-6"> 
        </div>
        </div>
    </div>
</div>


